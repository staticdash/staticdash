name: Publish Tutorial and Package

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install .
          pip install build twine
          pip install plotly pandas numpy dominate

      - name: Build tutorial
        run: python tutorial.py

      - name: Prepare GitHub Pages deployment
        run: |
          mkdir -p gh-pages
          cp -r tutorial_output gh-pages/
          cp -r directory_out gh-pages/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages

      - name: Increment version
        id: increment_version
        run: |
          YEAR=$(date +%Y)
          CURRENT_VERSION=$(grep -oP '(?<=version = ")[^"]+' pyproject.toml)
          CURRENT_YEAR=$(echo "$CURRENT_VERSION" | cut -d. -f1)
          CURRENT_NUMBER=$(echo "$CURRENT_VERSION" | cut -d. -f2)

          if [ "$CURRENT_YEAR" = "$YEAR" ]; then
            NEW_NUMBER=$((CURRENT_NUMBER + 1))
          else
            NEW_NUMBER=1
          fi

          NEW_VERSION="$YEAR.$NEW_NUMBER"
          sed -i "s/version = \"$CURRENT_VERSION\"/version = \"$NEW_VERSION\"/" pyproject.toml

          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Commit new version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "Increment version to ${{ steps.increment_version.outputs.new_version }}"
          git push

      - name: Build distribution
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*